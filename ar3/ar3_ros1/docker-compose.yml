version: '2.3'

services:
    ros_noetic: 
        build:
            context: ../../
            dockerfile: ar3/ar3_ros1/Dockerfile
        volumes:
            - /tmp/.X11-unix:/tmp/.X11-unix
            - $HOME/.Xauthority/:/root/.Xauthority
        stdin_open: true # docker run -i
        tty: true        # docker run -t
        #sysctls:
        #    - net.ipv6.conf.all.disable_ipv6=0  
        #env_file: 
        #    - ./.env  # create .env file in the same folder as Dockerfile and specify HOSTNAME and JOINCODE there
        #privileged: true
        cap_add:
            - NET_ADMIN
        devices:
            - /dev/net/tun
            - /dev/dri/
        environment:
            - DISPLAY=${DISPLAY}
        command:
            - bash
            - -c
            - |
                cd ar3_ros && catkin_make && source devel/setup.bash
                roslaunch ar3_description gazebo.launch 
        network_mode: host 
 















































































#                     SETUP DOCKER
# ---------------------------------------------------
# sudo systemctl daemon-reload
# sudo systemctl restart docker
# sudo gpasswd -a $USER docker
# newgrp docker
# ---------------------------------------------------

#                 CONFIRM INSTALLATION
# ---------------------------------------------------
# systemctl status docker.service
# ---------------------------------------------------

#                     RUN DOCKER
# ---------------------------------------------------
# cd mcfly_docker/mcfly/ilitron
# export DISPLAY=:1.0
# xhost +local:docker
# docker-compose up --build
# ---------------------------------------------------


#               RUN WS ON NEW TERMINAL
# ---------------------------------------------------
# docker run -it --net=host --ipc=host --pid=host --device /dev/dri/ -e DISPLAY=$DISPLAY -v $HOME/.Xauthority:/root/.Xauthority:ro ilitron_ros_noetic
# docker run -it ilitron_ros_noetic_1 /bin/bash
# docker exec -it ilitron_ros_noetic_1 bash
# ---------------------------------------------------


# ---------------------------------------------------
# docker image prune -a; sudo docker image rm -f $(sudo docker image ls -q)
# docker volume prune 
# docker system prune
# docker container prune; # kills all container even if not running or in background
# docker builder prune;

# docker ps -a
# docker ps -a -f status=running
# docker kill $(docker ps -q)

# docker-compose up --remove-orphans

# Error response from daemon: cannot stop container - signaling init process caused "permission denied"
# sudo systemctl restart docker.socket docker.service
# docker rm {container_id}
# ---------------------------------------------------

